using System;
using System.Diagnostics;
using PureCloudPlatform.Client.V2.Api;
using PureCloudPlatform.Client.V2.Client;
using PureCloudPlatform.Client.V2.Model;
using PureCloudPlatform.Client.V2.Extensions;

namespace Example
{
    public class GetRecordingJobsExample
    {
        static void Main(string[] args)
        {   
            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region
            Configuration.Default.ApiClient.setBasePath(region);
            
            // Configure OAuth2 access token for authorization: PureCloud OAuth
            // The following example is using the Client Credentials Grant
            var accessTokenInfo = Configuration.Default.ApiClient.PostToken("your_client_credential_grant_id", "your_client_credential_grant_secret");

            var apiInstance = new RecordingApi();
            var pageSize = 56;  // int? | Page size (optional)  (default to 25)
            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)
            var sortBy = "sortBy_example";  // string | Sort by (optional)  (default to userId)
            var state = "state_example";  // string | Filter by state (optional) 
            var showOnlyMyJobs = true;  // bool? | Show only my jobs (optional) 
            var jobType = "jobType_example";  // string | Job Type (Can be left empty for both) (optional) 
            var includeTotal = true;  // bool? | If false, cursor will be used to locate the page instead of pageNumber. It is recommended to set it to false for improved performance. (optional) 
            var cursor = "cursor_example";  // string | Indicates where to resume query results (not required for first page) (optional) 

            try
            { 
                // Get the status of all jobs within the user's organization
                RecordingJobEntityListing result = apiInstance.GetRecordingJobs(pageSize, pageNumber, sortBy, state, showOnlyMyJobs, jobType, includeTotal, cursor);
                Debug.WriteLine(result);
            }
            catch (Exception e)
            {
                Debug.Print("Exception when calling Recording.GetRecordingJobs: " + e.Message );
            }
        }
    }
}