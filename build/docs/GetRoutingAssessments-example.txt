using System;
using System.Diagnostics;
using PureCloudPlatform.Client.V2.Api;
using PureCloudPlatform.Client.V2.Client;
using PureCloudPlatform.Client.V2.Model;
using PureCloudPlatform.Client.V2.Extensions;

namespace Example
{
    public class GetRoutingAssessmentsExample
    {
        static void Main(string[] args)
        {   
            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region
            Configuration.Default.ApiClient.setBasePath(region);
            
            // Configure OAuth2 access token for authorization: PureCloud OAuth
            // The following example is using the Client Credentials Grant
            var accessTokenInfo = Configuration.Default.ApiClient.PostToken("your_client_credential_grant_id", "your_client_credential_grant_secret");

            var apiInstance = new RoutingApi();
            var before = "before_example";  // string | The cursor that points to the start of the set of entities that has been returned. (optional) 
            var after = "after_example";  // string | The cursor that points to the end of the set of entities that has been returned. (optional) 
            var limit = "limit_example";  // string | Number of entities to return. Maximum of 200. Deprecated in favour of pageSize (optional) 
            var pageSize = "pageSize_example";  // string | Number of entities to return. Maximum of 200. (optional) 
            var queueId = new List<string>(); // List<string> | Queue ID(s) to filter assessments by. (optional) 

            try
            { 
                // Retrieve all benefit assessments.
                AssessmentListing result = apiInstance.GetRoutingAssessments(before, after, limit, pageSize, queueId);
                Debug.WriteLine(result);
            }
            catch (Exception e)
            {
                Debug.Print("Exception when calling Routing.GetRoutingAssessments: " + e.Message );
            }
        }
    }
}