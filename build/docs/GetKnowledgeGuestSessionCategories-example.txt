using System;
using System.Diagnostics;
using PureCloudPlatform.Client.V2.Api;
using PureCloudPlatform.Client.V2.Client;
using PureCloudPlatform.Client.V2.Model;
using PureCloudPlatform.Client.V2.Extensions;

namespace Example
{
    public class GetKnowledgeGuestSessionCategoriesExample
    {
        static void Main(string[] args)
        {   
            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region
            Configuration.Default.ApiClient.setBasePath(region);
            

            var apiInstance = new KnowledgeApi();
            var sessionId = "sessionId_example";  // string | Knowledge guest session ID.
            var before = "before_example";  // string | The cursor that points to the start of the set of entities that has been returned. (optional) 
            var after = "after_example";  // string | The cursor that points to the end of the set of entities that has been returned. (optional) 
            var pageSize = "pageSize_example";  // string | Number of entities to return. Maximum of 200. (optional) 
            var parentId = "parentId_example";  // string | If specified, retrieves the children categories by parent category ID. (optional) 
            var isRoot = true;  // bool? | If specified, retrieves only the root categories. (optional) 
            var name = "name_example";  // string | Filter to return the categories that starts with the given category name. (optional) 
            var sortBy = "sortBy_example";  // string | Name: sort by category names alphabetically; Hierarchy: sort by the full path of hierarchical category names alphabetically (optional)  (default to Name)
            var expand = "expand_example";  // string | The specified entity attribute will be filled. Supported value:\"Ancestors\": every ancestors will be filled via the parent attribute recursively,but only the id, name, parentId will be present for the ancestors. (optional) 
            var includeDocumentCount = true;  // bool? | If specified, retrieves the number of documents related to category. (optional) 

            try
            { 
                // Get categories
                GuestCategoryResponseListing result = apiInstance.GetKnowledgeGuestSessionCategories(sessionId, before, after, pageSize, parentId, isRoot, name, sortBy, expand, includeDocumentCount);
                Debug.WriteLine(result);
            }
            catch (Exception e)
            {
                Debug.Print("Exception when calling Knowledge.GetKnowledgeGuestSessionCategories: " + e.Message );
            }
        }
    }
}