using System;
using System.Diagnostics;
using PureCloudPlatform.Client.V2.Api;
using PureCloudPlatform.Client.V2.Client;
using PureCloudPlatform.Client.V2.Model;
using PureCloudPlatform.Client.V2.Extensions;

namespace Example
{
    public class GetTelephonyProvidersEdgesPhonesExample
    {
        static void Main(string[] args)
        {   
            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region
            Configuration.Default.ApiClient.setBasePath(region);
            
            // Configure OAuth2 access token for authorization: PureCloud OAuth
            // The following example is using the Client Credentials Grant
            var accessTokenInfo = Configuration.Default.ApiClient.PostToken("your_client_credential_grant_id", "your_client_credential_grant_secret");

            var apiInstance = new TelephonyProvidersEdgeApi();
            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)
            var pageSize = 56;  // int? | Page size (optional)  (default to 25)
            var sortBy = "sortBy_example";  // string | The field to sort by (optional)  (default to name)
            var sortOrder = "sortOrder_example";  // string | Sort order (optional)  (default to "ASC")
            var siteId = "siteId_example";  // string | Filter by site.id (optional) 
            var webRtcUserId = "webRtcUserId_example";  // string | Filter by webRtcUser.id (optional) 
            var phoneBaseSettingsId = "phoneBaseSettingsId_example";  // string | Filter by phoneBaseSettings.id (optional) 
            var linesLoggedInUserId = "linesLoggedInUserId_example";  // string | Filter by lines.loggedInUser.id (optional) 
            var linesDefaultForUserId = "linesDefaultForUserId_example";  // string | Filter by lines.defaultForUser.id (optional) 
            var phoneHardwareId = "phoneHardwareId_example";  // string | Filter by phone_hardwareId (optional) 
            var linesId = "linesId_example";  // string | Filter by lines.id (optional) 
            var linesName = "linesName_example";  // string | Filter by lines.name (optional) 
            var name = "name_example";  // string | Name of the Phone to filter by, comma-separated (optional) 
            var statusOperationalStatus = "statusOperationalStatus_example";  // string | The primary status to filter by (optional) 
            var secondaryStatusOperationalStatus = "secondaryStatusOperationalStatus_example";  // string | The secondary status to filter by (optional) 
            var expand = new List<string>(); // List<string> | Fields to expand in the response, comma-separated (optional) 
            var fields = new List<string>(); // List<string> | Fields and properties to get, comma-separated (optional) 

            try
            { 
                // Get a list of Phone Instances. A maximum of 10,000 results is returned when filtering the results or sorting by a field other than the ID. Sorting by only the ID has no result limit. Each filter supports a wildcard, *, as a value to search for partial values.
                PhoneEntityListing result = apiInstance.GetTelephonyProvidersEdgesPhones(pageNumber, pageSize, sortBy, sortOrder, siteId, webRtcUserId, phoneBaseSettingsId, linesLoggedInUserId, linesDefaultForUserId, phoneHardwareId, linesId, linesName, name, statusOperationalStatus, secondaryStatusOperationalStatus, expand, fields);
                Debug.WriteLine(result);
            }
            catch (Exception e)
            {
                Debug.Print("Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesPhones: " + e.Message );
            }
        }
    }
}