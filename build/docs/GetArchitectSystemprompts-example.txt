using System;
using System.Diagnostics;
using PureCloudPlatform.Client.V2.Api;
using PureCloudPlatform.Client.V2.Client;
using PureCloudPlatform.Client.V2.Model;
using PureCloudPlatform.Client.V2.Extensions;

namespace Example
{
    public class GetArchitectSystempromptsExample
    {
        static void Main(string[] args)
        {   
            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region
            Configuration.Default.ApiClient.setBasePath(region);
            
            // Configure OAuth2 access token for authorization: PureCloud OAuth
            // The following example is using the Client Credentials Grant
            var accessTokenInfo = Configuration.Default.ApiClient.PostToken("your_client_credential_grant_id", "your_client_credential_grant_secret");

            var apiInstance = new ArchitectApi();
            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)
            var pageSize = 56;  // int? | Page size (optional)  (default to 25)
            var sortBy = "sortBy_example";  // string | Sort by (optional)  (default to "id")
            var sortOrder = "sortOrder_example";  // string | Sort order (optional)  (default to "asc")
            var name = "name_example";  // string | Name (optional) 
            var description = "description_example";  // string | Description (optional) 
            var nameOrDescription = "nameOrDescription_example";  // string | Name or description (optional) 
            var includeMediaUris = true;  // bool? | Include the media URIs for each resource (optional)  (default to true)
            var includeResources = true;  // bool? | Include the resources for each system prompt (optional)  (default to true)
            var language = new List<string>(); // List<string> | Filter the resources down to the provided languages (optional) 

            try
            { 
                // Get System Prompts
                SystemPromptEntityListing result = apiInstance.GetArchitectSystemprompts(pageNumber, pageSize, sortBy, sortOrder, name, description, nameOrDescription, includeMediaUris, includeResources, language);
                Debug.WriteLine(result);
            }
            catch (Exception e)
            {
                Debug.Print("Exception when calling Architect.GetArchitectSystemprompts: " + e.Message );
            }
        }
    }
}