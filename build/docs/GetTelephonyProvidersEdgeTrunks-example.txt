using System;
using System.Diagnostics;
using PureCloudPlatform.Client.V2.Api;
using PureCloudPlatform.Client.V2.Client;
using PureCloudPlatform.Client.V2.Model;
using PureCloudPlatform.Client.V2.Extensions;

namespace Example
{
    public class GetTelephonyProvidersEdgeTrunksExample
    {
        static void Main(string[] args)
        {   
            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region
            Configuration.Default.ApiClient.setBasePath(region);
            
            // Configure OAuth2 access token for authorization: PureCloud OAuth
            // The following example is using the Client Credentials Grant
            var accessTokenInfo = Configuration.Default.ApiClient.PostToken("your_client_credential_grant_id", "your_client_credential_grant_secret");

            var apiInstance = new TelephonyProvidersEdgeApi();
            var edgeId = "edgeId_example";  // string | Edge ID
            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)
            var pageSize = 56;  // int? | Page size (optional)  (default to 25)
            var sortBy = "sortBy_example";  // string | Value by which to sort (optional)  (default to "name")
            var sortOrder = "sortOrder_example";  // string | Sort order (optional)  (default to "ASC")
            var trunkBaseId = "trunkBaseId_example";  // string | Filter by Trunk Base Ids (optional) 
            var trunkType = "trunkType_example";  // string | Filter by a Trunk type (optional) 

            try
            { 
                // Get the list of available trunks for the given Edge.
                TrunkEntityListing result = apiInstance.GetTelephonyProvidersEdgeTrunks(edgeId, pageNumber, pageSize, sortBy, sortOrder, trunkBaseId, trunkType);
                Debug.WriteLine(result);
            }
            catch (Exception e)
            {
                Debug.Print("Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgeTrunks: " + e.Message );
            }
        }
    }
}