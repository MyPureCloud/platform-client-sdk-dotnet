using System;
using System.Diagnostics;
using PureCloudPlatform.Client.V2.Api;
using PureCloudPlatform.Client.V2.Client;
using PureCloudPlatform.Client.V2.Model;
using PureCloudPlatform.Client.V2.Extensions;

namespace Example
{
    public class GetRoutingQueueMembersExample
    {
        static void Main(string[] args)
        {   
            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region
            Configuration.Default.ApiClient.setBasePath(region);
            
            // Configure OAuth2 access token for authorization: PureCloud OAuth
            // The following example is using the Client Credentials Grant
            var accessTokenInfo = Configuration.Default.ApiClient.PostToken("your_client_credential_grant_id", "your_client_credential_grant_secret");

            var apiInstance = new RoutingApi();
            var queueId = "queueId_example";  // string | Queue ID
            var pageNumber = 56;  // int? |  (optional)  (default to 1)
            var pageSize = 56;  // int? | Max value is 100 (optional)  (default to 25)
            var sortOrder = "sortOrder_example";  // string | Note: results are sorted by name. (optional)  (default to asc)
            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) 
            var name = "name_example";  // string | Filter by queue member name (contains-style search) (optional) 
            var profileSkills = new List<string>(); // List<string> | Filter by profile skill (contains-style search) (optional) 
            var skills = new List<string>(); // List<string> | Filter by skill (contains-style search) (optional) 
            var languages = new List<string>(); // List<string> | Filter by language (contains-style search) (optional) 
            var routingStatus = new List<string>(); // List<string> | Filter by routing status (optional) 
            var presence = new List<string>(); // List<string> | Filter by presence (optional) 
            var memberBy = "memberBy_example";  // string | Filter by member type (optional) 
            var joined = "joined_example";  // bool? | Filter by joined status (optional) 

            try
            { 
                // Get the members of this queue.
                QueueMemberEntityListing result = apiInstance.GetRoutingQueueMembers(queueId, pageNumber, pageSize, sortOrder, expand, name, profileSkills, skills, languages, routingStatus, presence, memberBy, joined);
                Debug.WriteLine(result);
            }
            catch (Exception e)
            {
                Debug.Print("Exception when calling Routing.GetRoutingQueueMembers: " + e.Message );
            }
        }
    }
}