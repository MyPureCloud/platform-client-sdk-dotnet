using System;
using System.Diagnostics;
using PureCloudPlatform.Client.V2.Api;
using PureCloudPlatform.Client.V2.Client;
using PureCloudPlatform.Client.V2.Model;
using PureCloudPlatform.Client.V2.Extensions;

namespace Example
{
    public class GetQualityEvaluationsQueryExample
    {
        static void Main(string[] args)
        {   
            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region
            Configuration.Default.ApiClient.setBasePath(region);
            
            // Configure OAuth2 access token for authorization: PureCloud OAuth
            // The following example is using the Client Credentials Grant
            var accessTokenInfo = Configuration.Default.ApiClient.PostToken("your_client_credential_grant_id", "your_client_credential_grant_secret");

            var apiInstance = new QualityApi();
            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)
            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)
            var expand = new List<string>(); // List<string> | variable name requested by expand list (optional) 
            var previousPage = "previousPage_example";  // string | Previous page token (optional) 
            var conversationId = "conversationId_example";  // string | conversationId specified (optional) 
            var agentUserId = "agentUserId_example";  // string | user id of the agent (optional) 
            var agentTeamId = "agentTeamId_example";  // string | team id of the agent (optional) 
            var evaluatorUserId = "evaluatorUserId_example";  // string | evaluator user id (optional) 
            var assigneeUserId = "assigneeUserId_example";  // string | assignee user id (optional) 
            var queueId = "queueId_example";  // string | queue id (optional) 
            var startTime = "startTime_example";  // string | start time of the evaluation query (optional) 
            var endTime = "endTime_example";  // string | end time of the evaluation query (optional) 
            var formContextId = "formContextId_example";  // string | shared id between form versions (optional) 
            var evaluationState = new List<string>(); // List<string> |  (optional) 
            var isReleased = true;  // bool? | the evaluation has been released (optional) 
            var agentHasRead = true;  // bool? | agent has the evaluation (optional) 
            var expandAnswerTotalScores = true;  // bool? | get the total scores for evaluations. NOTE: The answers will only be populated if this parameter is set to true in the request. (optional) 
            var maximum = 56;  // int? | the maximum number of results to return (optional) 
            var sortOrder = "sortOrder_example";  // string | NOTE: Does not work when conversationId is supplied. (optional) 
            var includeDeletedUsers = true;  // bool? | Allow returning an agent or evaluator user with a 'delete' status. Defaults to false. (optional)  (default to false)

            try
            { 
                // Queries Evaluations and returns a paged list
                EvaluationEntityListing result = apiInstance.GetQualityEvaluationsQuery(pageSize, pageNumber, expand, previousPage, conversationId, agentUserId, agentTeamId, evaluatorUserId, assigneeUserId, queueId, startTime, endTime, formContextId, evaluationState, isReleased, agentHasRead, expandAnswerTotalScores, maximum, sortOrder, includeDeletedUsers);
                Debug.WriteLine(result);
            }
            catch (Exception e)
            {
                Debug.Print("Exception when calling Quality.GetQualityEvaluationsQuery: " + e.Message );
            }
        }
    }
}