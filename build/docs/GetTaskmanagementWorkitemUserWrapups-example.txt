using System;
using System.Diagnostics;
using PureCloudPlatform.Client.V2.Api;
using PureCloudPlatform.Client.V2.Client;
using PureCloudPlatform.Client.V2.Model;
using PureCloudPlatform.Client.V2.Extensions;

namespace Example
{
    public class GetTaskmanagementWorkitemUserWrapupsExample
    {
        static void Main(string[] args)
        {   
            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region
            Configuration.Default.ApiClient.setBasePath(region);
            
            // Configure OAuth2 access token for authorization: PureCloud OAuth
            // The following example is using the Client Credentials Grant
            var accessTokenInfo = Configuration.Default.ApiClient.PostToken("your_client_credential_grant_id", "your_client_credential_grant_secret");

            var apiInstance = new TaskManagementApi();
            var workitemId = "workitemId_example";  // string | The ID of the Workitem.
            var userId = "userId_example";  // string | The ID of the user
            var expands = "expands_example";  // string | Which fields, if any, to expand. (optional) 
            var after = "after_example";  // string | The cursor that points to the end of the set of entities that has been returned. (optional) 
            var pageSize = 56;  // int? | Limit the number of entities to return. It is not guaranteed that the requested number of entities will be filled in a single request. If an `after` key is returned as part of the response it is possible that more entities that match the filter criteria exist. Maximum of 50. (optional)  (default to 25)
            var sortOrder = "sortOrder_example";  // string | Ascending or descending sort order (optional)  (default to descending)

            try
            { 
                // Get all wrapup codes added for the given user for a workitem.
                WorkitemWrapupEntityListing result = apiInstance.GetTaskmanagementWorkitemUserWrapups(workitemId, userId, expands, after, pageSize, sortOrder);
                Debug.WriteLine(result);
            }
            catch (Exception e)
            {
                Debug.Print("Exception when calling TaskManagement.GetTaskmanagementWorkitemUserWrapups: " + e.Message );
            }
        }
    }
}