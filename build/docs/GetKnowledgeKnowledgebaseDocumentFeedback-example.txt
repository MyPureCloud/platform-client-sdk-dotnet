using System;
using System.Diagnostics;
using PureCloudPlatform.Client.V2.Api;
using PureCloudPlatform.Client.V2.Client;
using PureCloudPlatform.Client.V2.Model;
using PureCloudPlatform.Client.V2.Extensions;

namespace Example
{
    public class GetKnowledgeKnowledgebaseDocumentFeedbackExample
    {
        static void Main(string[] args)
        {   
            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region
            Configuration.Default.ApiClient.setBasePath(region);
            
            // Configure OAuth2 access token for authorization: PureCloud OAuth
            // The following example is using the Client Credentials Grant
            var accessTokenInfo = Configuration.Default.ApiClient.PostToken("your_client_credential_grant_id", "your_client_credential_grant_secret");

            var apiInstance = new KnowledgeApi();
            var knowledgeBaseId = "knowledgeBaseId_example";  // string | Knowledge base ID.
            var documentId = "documentId_example";  // string | Document ID.
            var before = "before_example";  // string | The cursor that points to the start of the set of entities that has been returned. (optional) 
            var after = "after_example";  // string | The cursor that points to the end of the set of entities that has been returned. (optional) 
            var pageSize = "pageSize_example";  // string | Number of entities to return. Maximum of 200. (optional) 
            var onlyCommented = true;  // bool? | If true, only feedback records that have comment are returned. If false, feedback records with and without comment are returned. Default: false. (optional) 
            var documentVersionId = "documentVersionId_example";  // string | Document version ID to filter by. Supported only if onlyCommented=true is set. (optional) 
            var documentVariationId = "documentVariationId_example";  // string | Document variation ID to filter by. Supported only if onlyCommented=true is set. (optional) 
            var appType = "appType_example";  // string | Application type to filter by. Supported only if onlyCommented=true is set. (optional) 
            var queryType = "queryType_example";  // string | Query type to filter by. Supported only if onlyCommented=true is set. (optional) 
            var userId = "userId_example";  // string | The ID of the user, who created the feedback, to filter by. Supported only if onlyCommented=true is set. (optional) 
            var queueId = "queueId_example";  // string | Queue ID to filter by. Supported only if onlyCommented=true is set. (optional) 
            var state = "state_example";  // string | State to filter by. Supported only if onlyCommented=true is set. Default: Final (optional) 

            try
            { 
                // Get a list of feedback records given on a document
                KnowledgeDocumentFeedbackResponseListing result = apiInstance.GetKnowledgeKnowledgebaseDocumentFeedback(knowledgeBaseId, documentId, before, after, pageSize, onlyCommented, documentVersionId, documentVariationId, appType, queryType, userId, queueId, state);
                Debug.WriteLine(result);
            }
            catch (Exception e)
            {
                Debug.Print("Exception when calling Knowledge.GetKnowledgeKnowledgebaseDocumentFeedback: " + e.Message );
            }
        }
    }
}