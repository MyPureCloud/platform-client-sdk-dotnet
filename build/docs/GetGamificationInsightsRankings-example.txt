using System;
using System.Diagnostics;
using PureCloudPlatform.Client.V2.Api;
using PureCloudPlatform.Client.V2.Client;
using PureCloudPlatform.Client.V2.Model;
using PureCloudPlatform.Client.V2.Extensions;

namespace Example
{
    public class GetGamificationInsightsRankingsExample
    {
        static void Main(string[] args)
        {   
            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region
            Configuration.Default.ApiClient.setBasePath(region);
            
            // Configure OAuth2 access token for authorization: PureCloud OAuth
            // The following example is using the Client Credentials Grant
            var accessTokenInfo = Configuration.Default.ApiClient.PostToken("your_client_credential_grant_id", "your_client_credential_grant_secret");

            var apiInstance = new GamificationApi();
            var filterType = "filterType_example";  // string | Filter type for the query request.
            var filterId = "filterId_example";  // string | ID for the filter type.
            var granularity = "granularity_example";  // string | Granularity
            var comparativePeriodStartWorkday = new Date();  // String | The start work day of comparative period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
            var primaryPeriodStartWorkday = new Date();  // String | The start work day of primary period. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
            var sortKey = "sortKey_example";  // string | Sort key
            var sortMetricId = "sortMetricId_example";  // string | Sort Metric Id (optional) 
            var sectionSize = 56;  // int? | The number of top and bottom users to return before ties (optional) 
            var userIds = "userIds_example";  // string | A list of up to 100 comma-separated user Ids (optional) 

            try
            { 
                // Get insights rankings
                InsightsRankings result = apiInstance.GetGamificationInsightsRankings(filterType, filterId, granularity, comparativePeriodStartWorkday, primaryPeriodStartWorkday, sortKey, sortMetricId, sectionSize, userIds);
                Debug.WriteLine(result);
            }
            catch (Exception e)
            {
                Debug.Print("Exception when calling Gamification.GetGamificationInsightsRankings: " + e.Message );
            }
        }
    }
}